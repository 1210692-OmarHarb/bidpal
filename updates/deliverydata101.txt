import React, { useState, useEffect } from "react";

import { Link, NavLink } from "react-router-dom";

import Navigation from "../../components/Navigation";

import "../../styles/general.css";
import "../../styles/pages.css";

function ManageAccounts() {
  const [users, setUsers] = useState([]);
  const [loading, setLoading] = useState(true);

  const [error, setError] = useState("");
  const [processingId, setProcessingId] = useState(null);

  useEffect(() => {
    fetchUsers();
  }, []);

  const fetchUsers = async () => {
    try {
      setLoading(true);

      const response = await fetch(
        "http://localhost:5000/api/users/list-users"
      );
      const data = await response.json();

      if (response.ok) {
        setUsers(data.users);
      } else {
        setError(data.message || "Failed to fetch users");
      }
    } catch (err) {
      setError("Network error. Please try again.");
      console.error("Error:", err);
    } finally {
      setLoading(false);
    }
  };
  const handleApprove = async (userID, username) => {
    if (!window.confirm(`Are you sure you want to suspend "${username}"?`)) {
      return;
    }

    try {
      setProcessingId(userID);
      const response = await fetch(
        `http://localhost:5000/api/users/suspend-user/${userID}`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            adminNotes: "",
          }),
        }
      );

      const data = await response.json();

      if (response.ok) {
        alert(`Account "${username}" Suspended successfully!`);
        fetchUsers();
      } else {
        alert(data.message || "Failed to Suspend Account");
      }
    } catch (err) {
      alert("Network error. Please try again.");
      console.error("Error:", err);
    } finally {
      setProcessingId(null);
    }
  };

  return (
    <>
      <Navigation />
      <main>
        <section className="section personal-view-admin12">
          <div className="hero personal-menu-admin123">
            <div className="menu personal-menu-admin123">
              <div className="menu-box personal-menu-admin123">
                <li className="menu-box-nav-header menu-admin123">
                  <div className="menu-box-nav-link">
                    <NavLink
                      to="/manage-accounts"
                      className={({ isActive }) =>
                        isActive
                          ? "menu-box-nav-link-link101 active"
                          : "menu-box-nav-link-link101"
                      }
                    >
                      Manage Accounts
                    </NavLink>
                  </div>
                  <div className="menu-box-nav-link">
                    <NavLink
                      to="/reports"
                      className={({ isActive }) =>
                        isActive
                          ? "menu-box-nav-link-link101 active"
                          : "menu-box-nav-link-link101"
                      }
                    >
                      Reports
                    </NavLink>
                  </div>
                  <div className="menu-box-nav-link">
                    <NavLink
                      to="/validate-org"
                      className={({ isActive }) =>
                        isActive
                          ? "menu-box-nav-link-link101 active"
                          : "menu-box-nav-link-link101"
                      }
                    >
                      Validate Orgs
                    </NavLink>
                  </div>
                </li>
              </div>
            </div>

            {/* MAIN SECTION */}
            <div className="section-auctions">
              <h2 className="page-title">Manage Users</h2>
              <p className="personal-view-descreption">
                Review user accounts and approve or reject them.
              </p>

              {error && (
                <div className="error-message-box">
                  <p>{error}</p>
                </div>
              )}

              {loading ? (
                <div className="loading-container">
                  <p>Loading users...</p>
                </div>
              ) : users.length === 0 ? (
                <div className="no-data-message">
                  <p>No users to review.</p>
                </div>
              ) : (
                <div className="section-auctions">
                  <h2 className="heading-secondary">Manage Accounts</h2>
                  <table className="auction-table">
                    <thead>
                      <tr>
                        <th>User ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Type</th>
                        <th>Status</th>
                        <th>Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      {users.map((user) => (
                        <tr key={user.userID}>
                          <td>{user.userID}</td>
                          <td>{user.username}</td>
                          <td>{user.email}</td>
                          <td>{user.userType}</td>
                          <td>{user.accountStatus}</td>
                          <td>
                            <div className="btnsorg">
                              <button
                                className="approve-btn"
                                onClick={() =>
                                  handleApprove(user.userID, user.username)
                                }
                                disabled={processingId === user.userID}
                              >
                                {processingId === user.userID
                                  ? "Processing..."
                                  : "Approve"}
                              </button>
                              <button className="deny-btn">Reject</button>
                            </div>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              )}
            </div>
          </div>
        </section>
      </main>
    </>
  );
}

export default ManageAccounts;
